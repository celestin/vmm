`ifndef TB_ENV__SV
`define TB_ENV__SV

`include "test_cfg.sv"
// Lab 2 - Add include statement for Packet.sv
// ToDo


class tb_env extends vmm_env;
   test_cfg cfg;
   // Lab 2 - Create an instance of Packet call it blueprint
   // ToDo


   // Lab 2 - Create an instance of Packet_atomic_gen
   // ToDo


   `vmm_env_member_begin(tb_env)
      // Lab 2 - Add the Packet_atomic_gen object as a xactor member
      // ToDo

   `vmm_env_member_end(tb_env)
    
   extern function new();
   extern virtual function void gen_cfg();
   extern virtual function void build();
   extern virtual task reset_dut();
   extern virtual task cfg_dut();
   extern virtual task wait_for_end();
   extern virtual task cleanup();
   extern virtual task report();
endclass: tb_env

function tb_env::new();
   super.new();
   cfg = new();
endfunction: new

function void tb_env::gen_cfg();
   super.gen_cfg();
   if (!cfg.randomize())
      `vmm_fatal(log, "Test Configuration Failed Randomization");
   `vmm_note(log, cfg.psdisplay());
endfunction: gen_cfg

function void tb_env::build();
   super.build();
   // Lab 2 - Construct and configure the Packet_atomic_gen object
   // ToDo

endfunction: build

task tb_env::reset_dut();
   super.reset_dut();
endtask: reset_dut
   
task tb_env::cfg_dut();
   super.cfg_dut();
endtask: cfg_dut

task tb_env::wait_for_end();
   super.wait_for_end();
   // Lab 2 - Wait for Packet_atomic_gen object's DONE flag to be set
   // ToDo

endtask: wait_for_end

task tb_env::cleanup();
   super.cleanup();
endtask: cleanup

task tb_env::report() ;
   super.report();
   // Lab 2 - Display test configuration
   // ToDo

endtask: report

`endif // TB_ENV__SV
